{"version":3,"sources":["Pages/FileUpload/FileUpload.jsx","assets/images/radroutes.png","Pages/Login/Login.jsx","assets/images/rr.png","assets/images/rad.png","assets/images/routes.png","Components/Nav/Nav.jsx","Pages/Home/Home.jsx","Utils/Fetcher.jsx","Pages/Editors/RunnerEditor.jsx","Pages/Peep/Peep.jsx","Pages/Register/Register.jsx","Pages/Editors/UpdateRunnerEditor.jsx","Components/Modals/UpdateCodeModal.jsx","Pages/Profile/Profile.jsx","Pages/Splash/Splash.jsx","Pages/Downloads/Downloads.jsx","Pages/RegiEmailCheck/RegiCheckEmail.jsx","Pages/EmailVerified/EmailVerified.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["enc","Login","props","useState","pass","setPass","email","setEmail","history","useHistory","useEffect","postForm","a","bod","JSON","stringify","axios","post","then","response","rData","data","authed","localStorage","setItem","push","alert","catch","error","console","log","Container","id","className","fluid","Row","Col","NavLink","href","width","src","logo","alt","FormGroup","Label","for","Input","onChange","e","target","value","type","name","placeholder","Button","onClick","block","Navi","isOpen","setIsOpen","user","setUser","userAva","setUserAva","token","getItem","decoded","jwt_decode","cleanDecoded","avatar","routes","joined","d","morD","jwtEnigma","Navbar","light","expand","NavbarBrand","effect","rad","height","NavbarToggler","Collapse","navbar","Nav","NavItem","onMouseEnter","onMouseLeave","Home","setType","route","setRoute","routeExists","setExitance","avail","setAvail","file","setFile","routeChange","rr","r","get","submit","formData","FormData","append","headers","removeItem","xl","xs","popFile","files","split","pop","fil","extChange","FormText","color","size","CardImg","top","class","fetchy","address","fetch","res","json","Editor","dropdownThemeOpen","setDropdownThemeOpen","dropdownFontOpen","setDropdownFontOpen","dropdownWrapOpen","setDropdownWrapOpen","dropdownLangOpen","setDropdownLangOpen","themeState","setthemeState","ThemeText","setthemeText","fontSize","setfontSize","wrapState","setWrapState","wrapStateText","setWrapStateText","lang","setLang","funk","setFunk","window","innerWidth","setWidth","innerHeight","setHeight","addEventListener","x","theme","themeText","fontSizez","wrap","lan","fun","routeChecker","onSubmit","shortLang","pFile","changeThemeValue","currentTheme","currentTarget","currentThemeText","textContent","changeFontValue","changeWrapValue","changeLangValue","lVal","Dropdown","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","header","charAt","toUpperCase","slice","disabled","mode","parseInt","wrapEnabled","editorProps","$blockScrolling","showGutter","Peep","allRoutes","setAllRoutes","setTrunx","userD","setUserD","rd","userTrunk","ud","sortUpdated","sort","b","date_time_last_updated","date_time_created","datSort","reverse","tronk","renderAvatar","userObj","find","obj","user_id","CardTitle","renderLang","md","map","fl","Card","body","CardBody","CardHeader","ext","route_name","tag","CardText","codeString","Register","Form","method","action","encType","setTimeout","rt","fnk","rtid","langy","setShortLang","l","switchLangy","route_id","UpdateMod","buttonLabel","modal","setModal","externalCloseBtn","style","position","right","dialogClassName","bsClass","Modal","external","ModalHeader","ModalBody","ModalFooter","userName","setUserName","setAvatar","setRoutes","CardSubtitle","emailCheck","userCheck","avaCheck","user_name","Splash","Fade","Docs","download","RegiCheckEmail","EmailVerified","App","path","exact","component","FileUpload","Downloads","Profile","RunnerEditor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7b23e980.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport logo from \"../../assets/images/rr.png\";\r\nimport Navi from \"../../Components/Nav/Nav\";\r\n\r\nlet enc\r\nconst Home = (props) => {\r\n  const [type, setType] = useState(\"...Waiting for file to be loaded\");\r\n  const [route, setRoute] = useState('');\r\n  const [routeExists, setExitance] = useState(\"Availible\");\r\n  const [avail, setAvail] = useState(\"avail\");\r\n  const [file, setFile] = useState();\r\n\r\n  let jwtEnigma = () => {\r\n    let token = localStorage.getItem('enc')\r\n    if (token) {\r\n      enc = token\r\n    }\r\n    else { console.log(\"You're not supposed to be here...\") }\r\n  }\r\n\r\n  const extChange = (e) => {\r\n    let fileInput = e.target.files[0].name;\r\n    let popFile = fileInput.split(\".\").pop();\r\n    setType(popFile);\r\n    let fil = e.target.files[0]\r\n    setFile(fil)\r\n  };\r\n\r\n  const ok = (rr) => {\r\n    axios.get(`https://radroute.run/exists/${rr}`)\r\n    .then(function (data) {\r\n      let d = data.data;\r\n      if (d === false) {\r\n        setExitance(\"Route Availible\");\r\n        setAvail(\"avail\");\r\n      }\r\n      if (d === true) {\r\n        setExitance(\"Route NOT Availible\");\r\n        setAvail(\"notAvail\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const routeChange = (e) => {\r\n    let r = e.target.value;\r\n    setRoute(r);\r\n    ok(r);\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(avail==='avail'){\r\n    var formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"route\", route);\r\n    formData.append(\"type\", type);\r\n    formData.append(\"enc\", enc);\r\n    axios.post('https://radroute.run/file', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    }).then(function (response) {\r\n      let rData = response\r\n      localStorage.removeItem('enc')\r\n      localStorage.setItem('enc', rData.data)\r\n      setFile('')\r\n      setRoute('')\r\n      alert(`File Uploaded\\nCheck your profile, or peep some code`)\r\n    })\r\n  \r\n  }if (avail==='notAvail') {\r\n      alert(`Please choose another route, \\n ${route} is taken`)\r\n      return\r\n    }\r\n    if (route==='') {\r\n      alert('Please enter a valid route. \\n Your route field is currently blank')\r\n      return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    jwtEnigma()\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Container>\r\n        <Navi />\r\n      </Container>\r\n      <Container className=\"pb-5 mt-5 pt-5 txt-cen ninja\">\r\n          <Row className=\"txt-cen\">\r\n            <Col>\r\n              <img\r\n             className='img-fluid'\r\n             width='40%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"txt-cen\" xl=\"2\" xs=\"1\">\r\n            <Col className=\"ninja p-5\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Your Rad Route will be hosted at https://radroutes.com/{route}\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"route\"\r\n                  placeholder=\"my-rad-route\"\r\n                  onChange={(e) => {\r\n                    routeChange(e);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <Label className={avail}>Your Route is {routeExists}</Label>\r\n            </Col>\r\n            <Col className=\"ninja p-5\">\r\n              <FormGroup>\r\n                <Label for=\"exampleFile\">Upload a file for your route:</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  onChange={(e) => {\r\n                    extChange(e);\r\n                  }}\r\n                  name=\"file\"\r\n                  id=\"exampleFile\"\r\n                />\r\n                <FormText color=\"muted\">Your File is a {type} File</FormText>\r\n              </FormGroup>\r\n              <FormGroup className=\"ninjaVanish\">\r\n                <Input type=\"select\" name=\"type\" id=\"exampleSelect\">\r\n                  <option name=\"type\" value={type}></option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button size=\"lg\" onClick={submit} className=\"ninja mt-5\">\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/radroutes.e439f672.png\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport logo from \"../../assets/images/radroutes.png\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const postForm = async () => {\r\n      let bod = JSON.stringify({\r\n        'email': email,\r\n        'password': pass,\r\n      })\r\n      axios.post('https://radroute.run/login', bod)\r\n      .then(function (response) {\r\n        let rData = response.data\r\n        let authed = response.data.authed\r\n        let enc = response.data.enc\r\n        if(authed=='1'){\r\n          // console.log(authed,enc)\r\n          localStorage.setItem('enc', enc)\r\n\r\n          history.push(\"/Home\");\r\n\r\n        }else{\r\n          alert(rData)\r\n        }\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <Container id=\"logoCon\" className=\"txt-cen\" fluid>\r\n      <Container>\r\n\r\n        <Row className=\"mt-4\">\r\n          <Col id=\"logo\">\r\n            <NavLink href='/'>\r\n            <img\r\n             className='img-fluid'\r\n             width='40%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Row className=\"mr-5 ml-5  p-5 txt-cen\">\r\n        <Col>\r\n          <FormGroup className=\"mr-sm-2 mb-sm-0 sec\">\r\n            <Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n              <h4>\r\n                Email\r\n         </h4>\r\n            </Label>\r\n            <Input\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"Email\"\r\n              placeholder=\"rad@radroutes.com\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className=\"mt-4 mr-sm-2 mb-sm-0\">\r\n            <Label for=\"examplePassword\" className=\"mr-sm-2 sec\">\r\n              <h4>\r\n                Password\r\n            </h4>\r\n            </Label>\r\n            <Input\r\n              onChange={(e) => setPass(e.target.value)}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"Password\"\r\n              placeholder=\"secret , shh don't tell anyone\"\r\n            />\r\n          </FormGroup>\r\n          <Button className='mt-4'\r\n            onClick={postForm}\r\n            block\r\n            >\r\n              Submit\r\n            </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className='pb-4'>\r\n        <Col>\r\n          <NavLink href='/Register'>\r\n            Register\r\n        </NavLink>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/rr.36c4f743.png\";","export default __webpack_public_path__ + \"static/media/rad.085e73e8.png\";","export default __webpack_public_path__ + \"static/media/routes.72dcc749.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport rad from \"../../assets/images/rad.png\";\r\nimport routes from \"../../assets/images/routes.png\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst cogSVG = 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%2265%22%20height%3D%2260.67%22%20preserveAspectRatio%3D%22xMidYMid%20meet%22%20viewBox%3D%220%200%201920%201792%22%3E%3Cpath%20d%3D%22M896%20896q0-106-75-181t-181-75t-181%2075t-75%20181t75%20181t181%2075t181-75t75-181zm768%20512q0-52-38-90t-90-38t-90%2038t-38%2090q0%2053%2037.5%2090.5t90.5%2037.5t90.5-37.5t37.5-90.5zm0-1024q0-52-38-90t-90-38t-90%2038t-38%2090q0%2053%2037.5%2090.5T1536%20512t90.5-37.5T1664%20384zm-384%20421v185q0%2010-7%2019.5t-16%2010.5l-155%2024q-11%2035-32%2076q34%2048%2090%20115q7%2011%207%2020q0%2012-7%2019q-23%2030-82.5%2089.5T999%201423q-11%200-21-7l-115-90q-37%2019-77%2031q-11%20108-23%20155q-7%2024-30%2024H547q-11%200-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118%2089q-7%207-20%207q-11%200-21-8q-144-133-144-160q0-9%207-19q10-14%2041-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5T0%20987V802q0-10%207-19.5T23%20772l155-24q11-35%2032-76q-34-48-90-115q-7-11-7-20q0-12%207-20q22-30%2082-89t79-59q11%200%2021%207l115%2090q34-18%2077-32q11-108%2023-154q7-24%2030-24h186q11%200%2020%207.5t10%2017.5l23%20153q34%2010%2075%2031l118-89q8-7%2020-7q11%200%2021%208q144%20133%20144%20160q0%208-7%2019q-12%2016-42%2054t-45%2060q23%2048%2034%2082l152%2023q10%202%2017%2010.5t7%2019.5zm640%20533v140q0%2016-149%2031q-12%2027-30%2052q51%20113%2051%20138q0%204-4%207q-122%2071-124%2071q-8%200-46-47t-52-68q-20%202-30%202t-30-2q-14%2021-52%2068t-46%2047q-2%200-124-71q-4-3-4-7q0-25%2051-138q-18-25-30-52q-149-15-149-31v-140q0-16%20149-31q13-29%2030-52q-51-113-51-138q0-4%204-7q4-2%2035-20t59-34t30-16q8%200%2046%2046.5t52%2067.5q20-2%2030-2t30%202q51-71%2092-112l6-2q4%200%20124%2070q4%203%204%207q0%2025-51%20138q17%2023%2030%2052q149%2015%20149%2031zm0-1024v140q0%2016-149%2031q-12%2027-30%2052q51%20113%2051%20138q0%204-4%207q-122%2071-124%2071q-8%200-46-47t-52-68q-20%202-30%202t-30-2q-14%2021-52%2068t-46%2047q-2%200-124-71q-4-3-4-7q0-25%2051-138q-18-25-30-52q-149-15-149-31V314q0-16%20149-31q13-29%2030-52q-51-113-51-138q0-4%204-7q4-2%2035-20t59-34t30-16q8%200%2046%2046.5t52%2067.5q20-2%2030-2t30%202q51-71%2092-112l6-2q4%200%20124%2070q4%203%204%207q0%2025-51%20138q17%2023%2030%2052q149%2015%20149%2031z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E'\r\n\r\n\r\nconst Navi = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [userAva, setUserAva] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  let jwtEnigma = () => {\r\n    let token = localStorage.getItem(\"enc\");\r\n    if (token) {\r\n      var decoded = jwt_decode(token);\r\n      let cleanDecoded = {\r\n        user: decoded.user,\r\n        email: decoded.email,\r\n        avatar: decoded.avatar,\r\n        routes: decoded.routes,\r\n        joined: decoded.joined,\r\n        d: decoded.morD,\r\n      };\r\n      setUserAva(cleanDecoded.avatar);\r\n      setUser(cleanDecoded);\r\n      // console.log(cleanDecoded)\r\n    } else {\r\n      history.push(\"/Login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    jwtEnigma();\r\n  }, []);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const changeToCog = () =>{\r\n    console.log(userAva)\r\n    setUserAva(cogSVG)\r\n    console.log(userAva)\r\n}\r\n  const changeBackUser = () =>{\r\n    console.log(userAva)\r\n    setUserAva(user.avatar)\r\n    console.log(userAva)\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        light\r\n        expand='md'\r\n        className='fixed-top muhNav radGrad font-weight-bold '\r\n      >\r\n        <NavbarBrand className='ml-4 brand' href='/Home'>\r\n          <LazyLoadImage\r\n            id='pics'\r\n            effect='blur'\r\n            src={rad} // use normal <img> attributes as props\r\n            height='70px'\r\n            width='100px'\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className='mr-auto ' navbar>\r\n            <NavItem className='border border-primary ml-3'>\r\n              <NavLink href='/Home'>\r\n                <strong>Home</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className='border border-primaryGrad ml-3'>\r\n              <NavLink href='/Editor'>\r\n                <strong>Editor</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className='border border-secondary ml-3'>\r\n              <NavLink href='/FileUpload'>\r\n                <strong>Upload a File</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className='border border-secondaryGrad ml-3'>\r\n              <NavLink href='/Peep'>\r\n                <strong>Peep Code</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n           \r\n           \r\n            <NavItem className='border border-primary ml-3'>\r\n              <NavLink href='https://docs.radroutes.com/Prerequisites'>\r\n                <strong>Downloads</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n            \r\n            <NavItem className='border border-primaryGrad ml-3'>\r\n              <NavLink href='https://docs.radroutes.com'>\r\n                <strong>Documentation</strong>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavLink href='/Profile'>\r\n            <img\r\n              onMouseEnter={changeToCog}\r\n              onMouseLeave={changeBackUser}\r\n              src={userAva}\r\n              alt=''\r\n              height='60px'\r\n              width='65px'\r\n              className='rndNav shad'\r\n              \r\n            />\r\n          </NavLink>\r\n          <NavbarBrand className='ml-4 brand' href='/Profile'>\r\n            <LazyLoadImage\r\n              id='pics'\r\n              effect='blur'\r\n              src={routes} // use normal <img> attributes as props\r\n              height='55px'\r\n              width='130px'\r\n            />\r\n          </NavbarBrand>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navi;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {BsCodeSlash, BsCloudUpload} from 'react-icons/bs'\r\nimport {CgBrowse} from 'react-icons/cg'\r\nimport {FaCogs} from 'react-icons/fa'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  CardImg,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport Navi from \"../../Components/Nav/Nav\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction Home() {\r\n  const [user, setUser] = useState(\"\");\r\n  // const [ user, setUser ] = useState('');\r\n\r\n  let jwtEnigma = () => {\r\n    let token = localStorage.getItem(\"enc\");\r\n    if (token) {\r\n      var decoded = jwt_decode(token);\r\n      let cleanDecoded = {\r\n        user: decoded.user,\r\n        email: decoded.email,\r\n        avatar: decoded.avatar,\r\n        routes: decoded.routes,\r\n        joined: decoded.joined,\r\n        d: decoded.morD,\r\n      };\r\n      setUser(cleanDecoded);\r\n    } else {\r\n      // alert(\"You're not authorized to view this page \\n GITOUT!\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    jwtEnigma();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Container>\r\n        <Navi />\r\n      </Container>\r\n      <Container className='mt-5 pt-5 txt-cen'>\r\n        {/* Home Launcher */}\r\n        <Row>\r\n          <Col>\r\n            <h1>R.A.D. User</h1>\r\n            <h3>{user.user}</h3>\r\n            <CardImg\r\n                top\r\n                className='rnd mx-auto shad profPic'\r\n                src={user.avatar}\r\n                alt='Card image cap'\r\n              />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <h3>\r\n          What would you like to do today?\r\n          </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row className='pt-5'>\r\n          <Col className='m-1'>\r\n          <NavLink href='/Editor'>\r\n              <Button className='shad' color='primary'>\r\n           <BsCodeSlash class='iconz' />\r\n            </Button>\r\n            </NavLink>\r\n          </Col>\r\n          <Col className='m-1'>\r\n          <NavLink href='/FileUpload'>\r\n              <Button className='shad' color='primaryGrad'>\r\n              <BsCloudUpload class='iconz'/>\r\n           </Button>\r\n            </NavLink>\r\n          </Col>\r\n          <Col className='m-1'>\r\n          <NavLink href='/Peep'>\r\n              <Button className='shad' color='secondary'>\r\n            <CgBrowse class='iconz'/>\r\n            </Button>\r\n            </NavLink>\r\n          </Col>\r\n          <Col className='m-1'>\r\n          <NavLink href='/Profile'>\r\n              <Button className='shad' color='secondaryGrad'>\r\n            <FaCogs class='iconz'/>\r\n            </Button>\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","\r\nconst fetchy = async (address) => {\r\n    let res = await fetch(address);\r\n    let data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  export default fetchy","// import react usestate and useeffect\r\nimport React, { useState, useEffect } from \"react\";\r\n//importing  components from reacctstrap\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n//import ace editor_---------------------------------------\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-ruby\";\r\nimport \"ace-builds/src-noconflict/mode-rust\";\r\n// ace theme imports\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport \"ace-builds/src-noconflict/theme-terminal\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport \"ace-builds/src-noconflict/theme-xcode\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\r\n//END import ace editor_---------------------------------------\r\nimport Navi from \"../../Components/Nav/Nav\";\r\nimport fetchy from \"../../Utils/Fetcher\";\r\n\r\n// ssetup the editor function for the component\r\nfunction Editor() {\r\n  //Dropdown Open states--------------------------------------------------------------------------------------------\r\n  // const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownThemeOpen, setDropdownThemeOpen] = useState(false);\r\n  const [dropdownFontOpen, setDropdownFontOpen] = useState(false);\r\n  const [dropdownWrapOpen, setDropdownWrapOpen] = useState(false);\r\n  const [dropdownLangOpen, setDropdownLangOpen] = useState(false);\r\n  //END Dropdown Open states--------------------------------------------------------------------------------------------\r\n\r\n  //Dropdown Selector states--------------------------------------------------------------------------------------------\r\n  const [themeState, setthemeState] = useState(\"\");\r\n  const [ThemeText, setthemeText] = useState(\"\");\r\n  const [fontSize, setfontSize] = useState(\"\");\r\n  const [wrapState, setWrapState] = useState(true);\r\n  const [wrapStateText, setWrapStateText] = useState(\"\");\r\n  const [lang, setLang] = useState(\"\");\r\n  //END Dropdown Selector states--------------------------------------------------------------------------------------------\r\n\r\n  //toggle states--------------------------------------------------------------------------------------------\r\n\r\n  // const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const toggleTheme = () => setDropdownThemeOpen((prevState) => !prevState);\r\n  const toggleFontSize = () => setDropdownFontOpen((prevState) => !prevState);\r\n  const toggleWrap = () => setDropdownWrapOpen((prevState) => !prevState);\r\n  const toggleLang = () => setDropdownLangOpen((prevState) => !prevState);\r\n  // const toggleBasicAuto = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleHeight = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleLiveAuto = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleSnippets = () => setDropdownOpen((prevState) => !prevState);\r\n  //END toggle states--------------------------------------------------------------------------------------------\r\n\r\n  //Post states--------------------------------------------------------------------------------------------\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //route state\r\n  let [route, setRoute] = useState(\"\");\r\n  //function statew\r\n  let [funk, setFunk] = useState(\"\");\r\n\r\n  const [avail, setAvail] = useState(\"avail\");\r\n  const [routeExists, setExitance] = useState(\"Availible\");\r\n  \r\n  //END Post states--------------------------------------------------------------------------------------------\r\n  \r\n  //window size states--------------------------------------------------------------------------------------------\r\n  \r\n  const [width, setWidth] = useState(window.innerWidth);\r\nconst [height, setHeight] = useState(window.innerHeight);\r\n  //ENDwindow size states--------------------------------------------------------------------------------------------\r\n\r\n  let windowSize =()=> {\r\n    let x = window.innerHeight - 450\r\n    setWidth(window.innerWidth)\r\n    setHeight(x)\r\n    // console.log(width, window.innerHeight)\r\n    \r\n  }\r\n  \r\n  window.addEventListener('resize', windowSize)\r\n  \r\n  //setup use effect\r\n  useEffect(() => {\r\n    setHeight(window.innerHeight-450)\r\n    setWidth(window.innerWidth)\r\n    //if the theme is saved in local storage, then get items and set\r\n    if (localStorage.getItem(\"currentTheme\")) {\r\n      let theme = localStorage.getItem(\"currentTheme\");\r\n      let themeText = localStorage.getItem(\"currentThemeText\");\r\n      let fontSizez = localStorage.getItem(\"FontSize\");\r\n      let wrap = localStorage.getItem(\"Wrap\");\r\n      let lan = localStorage.getItem(\"Lang\");\r\n      let fun = localStorage.getItem(\"Funk\");\r\n      if (wrap === \"Enabled\") {\r\n        setWrapState(true);\r\n        setWrapStateText(\"Enabled\");\r\n        // else set the states to default settings\r\n      } else {\r\n        setWrapState(false);\r\n        setWrapStateText(wrap);\r\n      }\r\n\r\n      setthemeState(theme);\r\n      setthemeText(themeText);\r\n      setfontSize(fontSizez);\r\n      setLang(lan);\r\n      setFunk(fun);\r\n    } else {\r\n      setthemeState(\"terminal\");\r\n      setthemeText(\"Termial\");\r\n      setfontSize(44);\r\n      setWrapState(true);\r\n      setWrapStateText(\"Enabled\");\r\n      setLang(\"python\");\r\n    }\r\n  }, []);\r\n  const routeChange = (e) => {\r\n    let r = e.target.value;\r\n    setRoute(r);\r\n    routeChecker(r);\r\n  };\r\n  const routeChecker = (rr) => {\r\n    fetchy(`https://radroute.run/exists/${rr}`).then(async (data) => {\r\n      let d = data;\r\n      if (d === false) {\r\n        setExitance(\"Route Availible\");\r\n        setAvail(\"avail\");\r\n      }\r\n      if (d === true) {\r\n        setExitance(\"Route NOT Availible\");\r\n        setAvail(\"notAvail\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //setting up the submit function for the post\r\n\r\n  const onSubmit = async () => {\r\n    if (avail === \"notAvail\") {\r\n      alert(`Please choose another route, \\n ${route} is taken`);\r\n      return `Please choose another route, \\n ${route} is taken`;\r\n      \r\n    }\r\n    else if (route === \"\") {\r\n\r\n      alert(\r\n        \"Please enter a valid route. \\n Your route field is currently blank\"\r\n      );\r\n      return;\r\n    }\r\n    else if (avail === \"avail\") {\r\n\r\n      let shortLang = lang\r\n      switch (shortLang) {\r\n        case 'python':\r\n          shortLang = 'py'\r\n          break;\r\n        case 'ruby':\r\n          shortLang='rb'\r\n          break;\r\n        case 'javascript':\r\n          shortLang='js'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      let bod = JSON.stringify({\r\n        route: route,\r\n        pFile: funk,\r\n        type: shortLang,\r\n        enc: localStorage.getItem(\"enc\"),\r\n      });\r\n      axios\r\n        .post(\"https://radroute.run/efile\", bod)\r\n        .then(function (response) {\r\n          let rData = response;\r\n          localStorage.removeItem(\"enc\");\r\n          localStorage.removeItem(\"Funk\");\r\n          localStorage.setItem(\"enc\", rData.data);\r\n          setFunk('')\r\n          setRoute('')\r\n          alert(`File Uploaded\\nCheck your profile, or peep some code`)\r\n        });\r\n    }\r\n    \r\n  };\r\n\r\n  //change theme funtion\r\n  const changeThemeValue = (e) => {\r\n    //set theme to e.target\r\n    let currentTheme = e.currentTarget.value;\r\n    let currentThemeText = e.currentTarget.textContent;\r\n    //set theme to state\r\n    setthemeState(currentTheme);\r\n    setthemeText(currentThemeText);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"currentTheme\", currentTheme);\r\n    localStorage.setItem(\"currentThemeText\", currentThemeText);\r\n  };\r\n  const changeFontValue = (e) => {\r\n    //set theme to e.target\r\n    let fontSizez = e.currentTarget.value;\r\n    //set theme to state\r\n    setfontSize(fontSizez);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"FontSize\", fontSizez);\r\n  };\r\n\r\n  const changeWrapValue = (e) => {\r\n    //set theme to e.target\r\n    let wrap = e.currentTarget.value;\r\n    ///if wrap is true\r\n    if (wrap === \"1\") {\r\n      //set wrap state to true\r\n      setWrapState(true);\r\n      setWrapStateText(\"Enabled\");\r\n      //save wrap state in local storage\r\n      localStorage.setItem(\"Wrap\", \"Enabled\");\r\n    }\r\n    //else set wrap state to false\r\n    else {\r\n      setWrapState(false);\r\n      setWrapStateText(\"Disabled\");\r\n      localStorage.setItem(\"Wrap\", \"Disabled\");\r\n    }\r\n  };\r\n\r\n  const changeLangValue = (e) => {\r\n    //set theme to e.target\r\n    let lVal = e.currentTarget.value;\r\n    let l = e.currentTarget.textContent;\r\n    //set theme to state\r\n    setLang(lVal);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"Lang\", lVal);\r\n  };\r\n\r\n  const funkChange = (e) => {\r\n    setFunk(e);\r\n    localStorage.setItem(\"Funk\", e);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Navi />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className='mt-5 pt-5 txt-cen'>\r\n        <Row>\r\n          <Col id='editor-head'>\r\n            <Label for='exampleText'>\r\n              <h3>Create a Rad Route!</h3>\r\n            </Label>\r\n          </Col>\r\n        </Row>\r\n          <FormGroup className='m-1 ninja'>\r\n            <Row>\r\n              <Col>\r\n                <Label className='prim'>\r\n                  <h4>Route will be hosted at </h4>\r\n                </Label>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Label className='sec'>\r\n                  <h4>RadRoute.run/files/</h4>\r\n                </Label>\r\n\r\n                <Label className='primGrad'>\r\n                  <h4>{route}</h4>\r\n                </Label>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Label className={avail}> {routeExists}</Label>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  type='route'\r\n                  value={route}\r\n                  onChange={(e) => {\r\n                    routeChange(e);\r\n                  }}\r\n                  name='route'\r\n                  id='route'\r\n                  placeholder='my-rad-api'\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <Row fluid id='drop-row' className='m-1 '>\r\n            <Dropdown isOpen={dropdownThemeOpen} toggle={toggleTheme}>\r\n              <DropdownToggle caret color='primary' className='m-1 ninja'>\r\n                {ThemeText}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem header>Pick Your Editor Theme</DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='kuroir'>\r\n                  Kuroir\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='github'>\r\n                  GitHub\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='terminal'>\r\n                  Terminal\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='tomorrow'>\r\n                  Tomorrow\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='twilight'>\r\n                  Twilight\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='xcode'>\r\n                  Xcode\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='textmate'>\r\n                  textmate\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeThemeValue} value='solarized_dark'>\r\n                  Solarized Dark\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={changeThemeValue}\r\n                  value='solarized_light'\r\n                >\r\n                  Solarized Light\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Dropdown isOpen={dropdownFontOpen} toggle={toggleFontSize}>\r\n              <DropdownToggle caret color='primaryGrad' className='m-1 ninja'>\r\n                {fontSize}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem header>Size in px</DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={5}>\r\n                  5\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={10}>\r\n                  10\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={15}>\r\n                  15\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={20}>\r\n                  20\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={25}>\r\n                  25\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={30}>\r\n                  30\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={35}>\r\n                  35\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={40}>\r\n                  40\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={45}>\r\n                  45\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={50}>\r\n                  50\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={55}>\r\n                  55\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeFontValue} value={88}>\r\n                  88\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Dropdown isOpen={dropdownWrapOpen} toggle={toggleWrap}>\r\n              <DropdownToggle caret color='secondary' className='m-1 ninja'>\r\n                Wrap {wrapStateText}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem header>Set text wrap of the editor</DropdownItem>\r\n                <DropdownItem onClick={changeWrapValue} value={1}>\r\n                  Enabled\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeWrapValue} value={2}>\r\n                  Disabled\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Dropdown isOpen={dropdownLangOpen} toggle={toggleLang}>\r\n              <DropdownToggle caret color='secondaryGrad' className='m-1 ninja'>\r\n                {lang.charAt(0).toUpperCase() + lang.slice(1)}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem header>Set The Language</DropdownItem>\r\n                <DropdownItem onClick={changeLangValue} value={\"javascript\"}>\r\n                  JavaScript (Node)\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeLangValue} value={\"python\"}>\r\n                  Python\r\n                </DropdownItem>\r\n                <DropdownItem onClick={changeLangValue} value={\"ruby\"}>\r\n                  Ruby\r\n                </DropdownItem>\r\n                <DropdownItem disabled onClick={changeLangValue} value={\"java\"}>\r\n                  Java\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </Row>\r\n          <Row>\r\n              <AceEditor\r\n                height={`${height}px`}\r\n                width={`${width}px`}\r\n                mode={lang}\r\n                theme={themeState}\r\n                fontSize={parseInt(fontSize)}\r\n                wrapEnabled={wrapState}\r\n                editorProps={{ $blockScrolling: true }}\r\n                value={funk}\r\n                onChange={funkChange}\r\n                id='funktion'\r\n                placeholder=\"print('hello world')\"\r\n                type='textarea'\r\n                name='funktion'\r\n                showGutter={true}\r\n              />\r\n          </Row>\r\n          <hr></hr>\r\n          <Row id='submitRow'>\r\n            <Col>\r\n              <Button color='primary' onClick={onSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import userEvent from \"@testing-library/user-event\";\r\nimport React, { useState, useEffect, Suspense } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  CardImg,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Navi from \"../../Components/Nav/Nav\";\r\nimport fetchy from \"../../Utils/Fetcher\";\r\nimport axios from \"axios\";\r\nimport CodeBlock from \"@tenon-io/tenon-codeblock\";\r\n\r\nfunction Peep() {\r\n  const [allRoutes, setAllRoutes] = useState([]);\r\n  const [trunx, setTrunx] = useState(\"\");\r\n  const [userD, setUserD] = useState(\"\");\r\n\r\n  const data = async () => {\r\n    fetchy(\"https://radroute.run/all\").then(async (data) => {\r\n      // console.log(data.userTrunk);\r\n      let rd = await data.allRoutes;\r\n      let ud = await data.userTrunk;\r\n      \r\n      sortUpdated(rd)\r\n      setUserD(ud);\r\n    });\r\n  };\r\n  \r\n let sortUpdated = async (r)=> {\r\n  let datSort = await r.sort((a, b) => {\r\n    if(!a.date_time_last_updated||!b.date_time_last_updated){\r\n      a=a.date_time_created\r\n      b=b.date_time_created\r\n    }\r\n    else{\r\n    a = a.date_time_last_updated.split('/');\r\n    b = b.date_time_last_updated.split('/');}\r\n    return a[2] - b[2] || a[1] - b[1] || a[0] - b[0];\r\n});\r\n\r\nsetAllRoutes(datSort.reverse())\r\n\r\n }\r\n\r\n\r\n  useEffect(() => {\r\n    data();\r\n    setTrunx(\"trunc\");\r\n  }, []);\r\n\r\n  const tronk = (e) => {\r\n    // console.log(e.target.className);\r\n    if (e.target.className === \"trunc\") {\r\n      e.target.className = \"notTrunc\";\r\n      // console.log(trunx);\r\n    } else {\r\n      e.target.className = \"trunc\";\r\n      //   setTrunx('notTrunc');\r\n      // console.log(trunx);\r\n    }\r\n  };\r\n\r\n  let renderAvatar = (e) => {\r\n    let userObj;\r\n    if (userD) {\r\n      userObj = userD.find((obj) => obj.user_id === e);\r\n      return (\r\n        <Col>\r\n          <CardTitle>\r\n            User Name:\r\n            <hr />\r\n            <strong>{userObj.user}</strong>\r\n          </CardTitle>\r\n          <CardImg\r\n            top\r\n            className='rndNav img-fluid mx-auto shad peepPic'\r\n            src={userObj.avatar}\r\n            alt='Card image cap'\r\n            width='50%'\r\n          />\r\n        </Col>\r\n      );\r\n    } else {\r\n      return <div>Loading....</div>;\r\n    }\r\n  };\r\n\r\n  let renderLang = (e) => {\r\n    switch (e) {\r\n      case \"py\":\r\n        return (\r\n          <Col>\r\n            <CardTitle>Language:</CardTitle>\r\n            <hr />\r\n            <CardTitle>\r\n              <strong>Python</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              top\r\n              className='rndNav img-fluid mx-auto shad peepPic'\r\n              src='https://cdn.drawception.com/images/panels/2018/1-1/xNgFE4yjtw-2.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </Col>\r\n        );\r\n      case \"rb\":\r\n        return (\r\n          <Col>\r\n            <CardTitle>Language:</CardTitle>\r\n            <hr />\r\n            <CardTitle>\r\n              <strong>Ruby</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              top\r\n              className='rndNav img-fluid mx-auto shad peepPic'\r\n              src='https://develop.spacemacs.org/layers/+lang/ruby/img/ruby.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </Col>\r\n        );\r\n      case \"js\":\r\n        return (\r\n          <Col>\r\n            <CardTitle>Language:</CardTitle>\r\n            <hr />\r\n            <CardTitle>\r\n              <strong>Node.JS</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              top\r\n              className='rndNav img-fluid mx-auto shad peepPic'\r\n              src='https://www.clipartmax.com/png/small/89-894960_js-discord-bot-logo-node-js-and-react-js.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </Col>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Container>\r\n        <Navi />\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row className='mt-5'>\r\n        <Col className='shad radGrad p-1 mb-3 txt-cen rounded-pill stok'>\r\n          <h1>Peep other users code and routes</h1>\r\n        </Col>\r\n      </Row>\r\n     \r\n      <Row md='1' className='txt-cen'>\r\n        {allRoutes.map((fl) => {\r\n          return (\r\n            <Col>\r\n              <Card body className='p-2 m-2'>\r\n                <CardBody>\r\n                  <CardHeader>\r\n                  <CardTitle>Date Created: {fl.date_time_created}</CardTitle>\r\n                  <CardTitle>Last Updated: {fl.date_time_last_updated}</CardTitle>\r\n                    <Row>\r\n                      {renderAvatar(fl.user_id)}\r\n\r\n                      {renderLang(fl.ext)}\r\n                    </Row>\r\n                  </CardHeader>\r\n                  <strong>Route:</strong>\r\n                  <strong>\r\n                    <a href={\"https://radroute.run/files/\" + fl.route_name}>\r\n                      <CardHeader className='raddGrad p-3 rounded-pill'>\r\n                        https://RadRoute.run/files/{fl.route_name}\r\n                      </CardHeader>\r\n                    </a>\r\n                  </strong>\r\n                  <CardTitle tag='h5'> </CardTitle>\r\n                  <hr />\r\n                  <CardTitle className='routesGrad rounded-pill p-2'>\r\n                    <strong>Code</strong>\r\n                  </CardTitle>\r\n                  <CardText onClick={tronk}>\r\n                    <CodeBlock codeString={`${fl.pFile}`} />\r\n                  </CardText>\r\n\r\n                  <hr />\r\n\r\n                  <CardTitle>Run Code with Rad Routes Runner :</CardTitle>\r\n                  <CodeBlock codeString={`rr -r ${fl.route_name}`} />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Peep;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport logo from \"../../assets/images/radroutes.png\";\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  // const alerty = ()=> {alert('Thanks for signing up! \\n You will be taken to the login page now.')}\r\n  return (\r\n    <Container id=\"logoCon\" className=\"txt-cen\" fluid>\r\n      <Container>\r\n        <Row className=\"mt-5\">\r\n          <Col id=\"logo\">\r\n            <NavLink href='/'>\r\n            <img\r\n             className='img-fluid'\r\n             width='30%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Row className=\"mr-5 ml-5  p-5 txt-cen\">\r\n        <Col>\r\n          <Form\r\n            method=\"POST\"\r\n            action=\"https://radroute.run/register\"\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <FormGroup className=\"mr-sm-2 mb-sm-0 sec\">\r\n              <Label for=\"username\" className=\"mr-sm-2\">\r\n                <h4>User Name</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"username\"\r\n                name=\"username\"\r\n                id=\"user\"\r\n                placeholder=\"IAmRad\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"mt-4 mr-sm-2 mb-sm-0 sec\">\r\n              <Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n                <h4>Email</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"Email\"\r\n                placeholder=\"rad@radroutes.com\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"mt-4 mr-sm-2 mb-sm-0\">\r\n              <Label for=\"examplePassword\" className=\"mr-sm-2 sec\">\r\n                <h4>Password</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"examplePassword\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </FormGroup>\r\n            <Button className=\"mt-4\" block>Submit</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"pb-4\">\r\n        <Col>\r\n          <NavLink href=\"/Login\">Login</NavLink>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Register;\r\n\r\nsetTimeout(() => {\r\n  \r\n}, 4000);","// import react usestate and useeffect\r\nimport React, { useState, useEffect } from \"react\";\r\n//importing  components from reacctstrap\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n//import ace editor_---------------------------------------\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-ruby\";\r\nimport \"ace-builds/src-noconflict/mode-rust\";\r\n// ace theme imports\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport \"ace-builds/src-noconflict/theme-terminal\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport \"ace-builds/src-noconflict/theme-xcode\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\r\n//END import ace editor_---------------------------------------\r\nimport fetchy from \"../../Utils/Fetcher\";\r\n\r\n// ssetup the editor function for the component\r\nfunction Editor(props) {\r\n  let { rt, fnk, rtid, langy } = props;\r\n  let switchLangy = (l) => {\r\n    switch (l) {\r\n      case \"py\":\r\n        langy = \"python\";\r\n        setShortLang('py')\r\n        break;\r\n      case \"rb\":\r\n        langy = \"ruby\";\r\n        setShortLang('rb')\r\n        break;\r\n      case \"js\":\r\n        langy = \"javascript\";\r\n        setShortLang('js')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //Dropdown Open states--------------------------------------------------------------------------------------------\r\n  // const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownThemeOpen, setDropdownThemeOpen] = useState(false);\r\n  const [dropdownFontOpen, setDropdownFontOpen] = useState(false);\r\n  const [dropdownWrapOpen, setDropdownWrapOpen] = useState(false);\r\n  const [dropdownLangOpen, setDropdownLangOpen] = useState(false);\r\n  //END Dropdown Open states--------------------------------------------------------------------------------------------\r\n\r\n  //Dropdown Selector states--------------------------------------------------------------------------------------------\r\n  const [themeState, setthemeState] = useState(\"\");\r\n  const [ThemeText, setthemeText] = useState(\"\");\r\n  const [fontSize, setfontSize] = useState(\"\");\r\n  const [wrapState, setWrapState] = useState(true);\r\n  const [wrapStateText, setWrapStateText] = useState(\"\");\r\n  const [lang, setLang] = useState(\"\");\r\n  const [shortLang, setShortLang] = useState(\"\");\r\n  //END Dropdown Selector states--------------------------------------------------------------------------------------------\r\n\r\n  //toggle states--------------------------------------------------------------------------------------------\r\n\r\n  // const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const toggleTheme = () => setDropdownThemeOpen((prevState) => !prevState);\r\n  const toggleFontSize = () => setDropdownFontOpen((prevState) => !prevState);\r\n  const toggleWrap = () => setDropdownWrapOpen((prevState) => !prevState);\r\n  const toggleLang = () => setDropdownLangOpen((prevState) => !prevState);\r\n  // const toggleBasicAuto = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleHeight = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleLiveAuto = () => setDropdownOpen((prevState) => !prevState);\r\n  // const toggleSnippets = () => setDropdownOpen((prevState) => !prevState);\r\n  //END toggle states--------------------------------------------------------------------------------------------\r\n\r\n  //Post states--------------------------------------------------------------------------------------------\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //route state\r\n  let [route, setRoute] = useState(\"\");\r\n  //function statew\r\n  let [funk, setFunk] = useState(\"\");\r\n\r\n  const [avail, setAvail] = useState(\"avail\");\r\n  const [routeExists, setExitance] = useState(\"Availible\");\r\n\r\n  //END Post states--------------------------------------------------------------------------------------------\r\n\r\n  //window size states--------------------------------------------------------------------------------------------\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n  //ENDwindow size states--------------------------------------------------------------------------------------------\r\n\r\n  let windowSize = () => {\r\n    let x = window.innerHeight - 450;\r\n    setWidth(window.innerWidth);\r\n    setHeight(x);\r\n    // console.log(width, window.innerHeight);\r\n  };\r\n\r\n  window.addEventListener(\"resize\", windowSize);\r\n\r\n  //setup use effect\r\n  useEffect(() => {\r\n    switchLangy(langy);\r\n    setHeight(window.innerHeight - 450);\r\n    setWidth(window.innerWidth);\r\n    //if the theme is saved in local storage, then get items and set\r\n    if (localStorage.getItem(\"currentTheme\")) {\r\n      let theme = localStorage.getItem(\"currentTheme\");\r\n      let themeText = localStorage.getItem(\"currentThemeText\");\r\n      let fontSizez = localStorage.getItem(\"FontSize\");\r\n      let wrap = localStorage.getItem(\"Wrap\");\r\n      let lan = langy;\r\n      let fun = fnk;\r\n      if (wrap === \"Enabled\") {\r\n        setWrapState(true);\r\n        setWrapStateText(\"Enabled\");\r\n        // else set the states to default settings\r\n      } else {\r\n        setWrapState(false);\r\n        setWrapStateText(wrap);\r\n      }\r\n\r\n      setthemeState(theme);\r\n      setthemeText(themeText);\r\n      setfontSize(fontSizez);\r\n      setLang(lan);\r\n      setFunk(fnk);\r\n    } else {\r\n      setFunk(fnk);\r\n      setthemeState(\"terminal\");\r\n      setthemeText(\"Termial\");\r\n      setfontSize(44);\r\n      setWrapState(true);\r\n      setWrapStateText(\"Enabled\");\r\n      setLang(langy);\r\n    }\r\n  }, []);\r\n  const routeChange = (e) => {\r\n    let r = e.target.value;\r\n    setRoute(r);\r\n    routeChecker(r);\r\n  };\r\n  const routeChecker = (rr) => {\r\n    fetchy(`https://radroute.run/exists/${rr}`).then(async (data) => {\r\n      let d = data;\r\n      if (d === false) {\r\n        setExitance(\"Route Availible\");\r\n        setAvail(\"avail\");\r\n      }\r\n      if (d === true) {\r\n        setExitance(\"Route NOT Availible\");\r\n        setAvail(\"notAvail\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //setting up the submit function for the post\r\n\r\n  const onSubmit = async () => {\r\n    if (avail === \"notAvail\") {\r\n      alert(`Please choose another route, \\n ${route} is taken`);\r\n      return `Please choose another route, \\n ${route} is taken`;\r\n    } else if (route === \"\") {\r\n      let bod = JSON.stringify({\r\n        route: rt,\r\n        pFile: funk,\r\n        route_id: rtid,\r\n        ext: shortLang,\r\n        enc: localStorage.getItem(\"enc\"),\r\n      });\r\n      axios.post(\"https://radroute.run/udr\", bod).then(function (response) {\r\n        let rData = response;\r\n        localStorage.removeItem(\"enc\");\r\n        localStorage.setItem(\"enc\", rData.data);\r\n        localStorage.removeItem(\"Funk\");\r\n\r\n        alert(\r\n          `Updated your R.A.D. Route\\nRefresh your profile, or peep some code`\r\n        );\r\n        return;\r\n      });\r\n    } else if (avail === \"avail\") {\r\n      let bod = JSON.stringify({\r\n        route: route,\r\n        pFile: funk,\r\n        route_id: rtid,\r\n        ext: shortLang,\r\n        enc: localStorage.getItem(\"enc\"),\r\n      });\r\n      axios.post(\"https://radroute.run/udr\", bod).then(function (response) {\r\n        let rData = response;\r\n        localStorage.removeItem(\"enc\");\r\n        localStorage.setItem(\"enc\", rData.data);\r\n        localStorage.removeItem(\"Funk\");\r\n        alert(\r\n          `Updated your R.A.D. Route\\nRefresh your profile, or peep some code`\r\n        );\r\n        return;\r\n      });\r\n    }\r\n  };\r\n\r\n  //change theme funtion\r\n  const changeThemeValue = (e) => {\r\n    //set theme to e.target\r\n    let currentTheme = e.currentTarget.value;\r\n    let currentThemeText = e.currentTarget.textContent;\r\n    //set theme to state\r\n    setthemeState(currentTheme);\r\n    setthemeText(currentThemeText);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"currentTheme\", currentTheme);\r\n    localStorage.setItem(\"currentThemeText\", currentThemeText);\r\n  };\r\n  const changeFontValue = (e) => {\r\n    //set theme to e.target\r\n    let fontSizez = e.currentTarget.value;\r\n    //set theme to state\r\n    setfontSize(fontSizez);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"FontSize\", fontSizez);\r\n  };\r\n\r\n  const changeWrapValue = (e) => {\r\n    //set theme to e.target\r\n    let wrap = e.currentTarget.value;\r\n    ///if wrap is true\r\n    if (wrap === \"1\") {\r\n      //set wrap state to true\r\n      setWrapState(true);\r\n      setWrapStateText(\"Enabled\");\r\n      //save wrap state in local storage\r\n      localStorage.setItem(\"Wrap\", \"Enabled\");\r\n    }\r\n    //else set wrap state to false\r\n    else {\r\n      setWrapState(false);\r\n      setWrapStateText(\"Disabled\");\r\n      localStorage.setItem(\"Wrap\", \"Disabled\");\r\n    }\r\n  };\r\n\r\n  const changeLangValue = (e) => {\r\n    //set theme to e.target\r\n    let lVal = e.currentTarget.value;\r\n    let l = e.currentTarget.textContent;\r\n    //set theme to state\r\n    setLang(lVal);\r\n    //set theme to local storage\r\n    localStorage.setItem(\"Lang\", lVal);\r\n  };\r\n\r\n  const funkChange = (e) => {\r\n    setFunk(e);\r\n    localStorage.setItem(\"Funk\", e);\r\n  };\r\n\r\n  return (\r\n    <Container className='txt-cen' fluid>\r\n      <FormGroup className='ninja'>\r\n        <Row>\r\n          <Col>\r\n            <Label className={avail}> Edit Route: </Label>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Input\r\n              type='route'\r\n              value={route}\r\n              onChange={(e) => {\r\n                routeChange(e);\r\n              }}\r\n              name='route'\r\n              id='route'\r\n              placeholder={rt}\r\n            />\r\n            <Label className={avail}> {routeExists}</Label>\r\n          </Col>\r\n        </Row>\r\n      </FormGroup>\r\n      <Row id='drop-row' className='m-1 '>\r\n        <Dropdown isOpen={dropdownThemeOpen} toggle={toggleTheme}>\r\n          <DropdownToggle caret color='primary' className='m-1 ninja'>\r\n            {ThemeText}\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Pick Your Editor Theme</DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='kuroir'>\r\n              Kuroir\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='github'>\r\n              GitHub\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='terminal'>\r\n              Terminal\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='tomorrow'>\r\n              Tomorrow\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='twilight'>\r\n              Twilight\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='xcode'>\r\n              Xcode\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='textmate'>\r\n              textmate\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='solarized_dark'>\r\n              Solarized Dark\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeThemeValue} value='solarized_light'>\r\n              Solarized Light\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        <Dropdown isOpen={dropdownFontOpen} toggle={toggleFontSize}>\r\n          <DropdownToggle caret color='primaryGrad' className='m-1 ninja'>\r\n            {fontSize}\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Size in px</DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={5}>\r\n              5\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={10}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={15}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={20}>\r\n              20\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={25}>\r\n              25\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={30}>\r\n              30\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={35}>\r\n              35\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={40}>\r\n              40\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={45}>\r\n              45\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={50}>\r\n              50\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={55}>\r\n              55\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeFontValue} value={88}>\r\n              88\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        <Dropdown isOpen={dropdownWrapOpen} toggle={toggleWrap}>\r\n          <DropdownToggle caret color='secondary' className='m-1 ninja'>\r\n            Wrap {wrapStateText}\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Set text wrap of the editor</DropdownItem>\r\n            <DropdownItem onClick={changeWrapValue} value={1}>\r\n              Enabled\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeWrapValue} value={2}>\r\n              Disabled\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        <Dropdown isOpen={dropdownLangOpen} toggle={toggleLang}>\r\n          <DropdownToggle caret color='secondaryGrad' className='m-1 ninja'>\r\n            {lang.charAt(0).toUpperCase() + lang.slice(1)}\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Set The Language</DropdownItem>\r\n            <DropdownItem onClick={changeLangValue} value={\"javascript\"}>\r\n              JavaScript (Node)\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeLangValue} value={\"python\"}>\r\n              Python\r\n            </DropdownItem>\r\n            <DropdownItem onClick={changeLangValue} value={\"ruby\"}>\r\n              Ruby\r\n            </DropdownItem>\r\n            <DropdownItem disabled onClick={changeLangValue} value={\"java\"}>\r\n              Java\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Row>\r\n      <Row>\r\n        <AceEditor\r\n          height={`${height}px`}\r\n          width={`${width}px`}\r\n          mode={lang}\r\n          theme={themeState}\r\n          fontSize={parseInt(fontSize)}\r\n          wrapEnabled={wrapState}\r\n          editorProps={{ $blockScrolling: true }}\r\n          value={funk}\r\n          onChange={funkChange}\r\n          id='funktion'\r\n          placeholder=\"print('hello world')\"\r\n          type='textarea'\r\n          name='funktion'\r\n          showGutter={true}\r\n        />\r\n      </Row>\r\n      <hr></hr>\r\n      <Row id='submitRow'>\r\n        <Col>\r\n          <Button color='primary' onClick={onSubmit}>\r\n            Update Route\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Edit from '../../Pages/Editors/UpdateRunnerEditor'\r\n\r\nconst UpdateMod = (props) => {\r\n  const { buttonLabel, className, funk, route,langy, rtid } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const externalCloseBtn = (\r\n    <button\r\n      className=\"close\"\r\n      style={{ position: \"absolute\", top: \"15px\", right: \"15px\" }}\r\n      onClick={toggle}\r\n    >\r\n      &times;\r\n    </button>\r\n  );\r\n  return (\r\n    <div dialogClassName=\"custom-modal\"\r\n    bsClass=\"my-modal\"\r\n    className='custom-modal'>\r\n      <Button className=\"p-3 mr-5 mt-4\" color=\"secondary\" onClick={toggle} block>\r\n        {buttonLabel}\r\n      </Button>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        external={externalCloseBtn}\r\n      >\r\n        <ModalHeader>Edit Your R.A.D. Route!</ModalHeader>\r\n        <ModalBody>\r\n          <Edit fnk={funk} rt={route} rtid={rtid} langy={langy}/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primaryGrad\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMod;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Input,\r\n  CardHeader,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport Navi from \"../../Components/Nav/Nav\";\r\nimport UpdateModal from '../../Components/Modals/UpdateCodeModal'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CodeBlock from \"@tenon-io/tenon-codeblock\";\r\n\r\nfunction Home() {\r\n  const [user, setUser] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [routes, setRoutes] = useState([]);\r\n  const history = useHistory();\r\n\r\n  let jwtEnigma = () => {\r\n    let token = localStorage.getItem(\"enc\");\r\n    if (token) {\r\n      var decoded = jwt_decode(token);\r\n      let cleanDecoded = {\r\n        user: decoded.user,\r\n        email: decoded.email,\r\n        avatar: decoded.avatar,\r\n        routes: decoded.routes,\r\n        joined: decoded.joined,\r\n        d: decoded.morD,\r\n      };\r\n      setUser(cleanDecoded);\r\n      setRoutes(decoded.routes);\r\n    } else {\r\n      // alert(\r\n      //   \"You're not authorized to view this page \\n GITOUT! \\n Meh....doesn't matter \\n You can't do any fun auth things anyway \\n Login to have a good time please.\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"enc\");\r\n    alert(`Be Rad ${user.user}\\n See you next time`);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    jwtEnigma();\r\n  }, []);\r\n\r\n  const updater = (e) => {\r\n    var emailCheck = email !== \"\" ? email : user.email;\r\n    var userCheck = userName !== \"\" ? userName : user.user;\r\n    var avaCheck = avatar !== \"\" ? avatar : user.avatar;\r\n    let bod = JSON.stringify({\r\n      email: emailCheck,\r\n      user_name: userCheck,\r\n      avatar: avaCheck,\r\n      enc: localStorage.getItem(\"enc\"),\r\n    });\r\n    axios.post(\"https://radroute.run/udp\", bod).then(function (response) {\r\n      let rData = response;\r\n      localStorage.removeItem(\"enc\");\r\n      localStorage.setItem(\"enc\", rData.data);\r\n      jwtEnigma();\r\n      alert(\"Profile Updated!\");\r\n    });\r\n  };\r\n\r\n  let renderLang = (e) => {\r\n    switch (e) {\r\n      case \"py\":\r\n        return (\r\n          <div className=''>\r\n            <CardTitle>Language:</CardTitle>\r\n            <CardTitle>\r\n              <strong>Python</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              className='rndNav img-fluid mx-auto shad profLangPic'\r\n              src='https://cdn.drawception.com/images/panels/2018/1-1/xNgFE4yjtw-2.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </div>\r\n        );\r\n      case \"rb\":\r\n        return (\r\n          <div className=''>\r\n            <CardTitle>Language:</CardTitle>\r\n            <CardTitle>\r\n              <strong>Ruby</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              className='rndNav img-fluid mx-auto shad profLangPic'\r\n              src='https://develop.spacemacs.org/layers/+lang/ruby/img/ruby.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </div>\r\n        );\r\n      case \"js\":\r\n        return (\r\n          <div className=''>\r\n            <CardTitle>Language:</CardTitle>\r\n            <CardTitle>\r\n              <strong>Node.JS</strong>\r\n            </CardTitle>\r\n            <CardImg\r\n              className='rndNav img-fluid mx-auto shad profLangPic'\r\n              src='https://www.clipartmax.com/png/small/89-894960_js-discord-bot-logo-node-js-and-react-js.png'\r\n              alt='Card image cap'\r\n              width='50%'\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Container >\r\n        <Navi />\r\n      </Container>\r\n      <Container className='mt-5 pt-5 txt-cen' fluid>\r\n        <Card >\r\n          <Row>\r\n            <Col>\r\n              <CardImg\r\n                top\r\n                className='rnd mx-auto shad profPic'\r\n                src={user.avatar}\r\n                alt='Card image cap'\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <CardTitle tag='h1'>{user.user}</CardTitle>\r\n                <CardSubtitle tag='h6' className='mb-2 text-muted'>\r\n                  Joined: {user.joined}\r\n                </CardSubtitle>\r\n              </Col>\r\n            </Row>\r\n            <Row className='m-2 p-2'>\r\n              <Col>User Name:</Col>\r\n              <Col>\r\n                <Input\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                  type='username'\r\n                  name='username'\r\n                  id='username'\r\n                  placeholder={user.user}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className='m-2 p-2'>\r\n              <Col>Email:</Col>\r\n              <Col>\r\n                <Input\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder={user.email}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className='m-2 p-2'>\r\n              <Col>Avatar URL:</Col>\r\n              <Col>\r\n                <Input\r\n                  onChange={(e) => setAvatar(e.target.value)}\r\n                  type='avatar'\r\n                  name='avatar'\r\n                  id='avatar'\r\n                  placeholder={user.avatar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  className='p-3  m-4'\r\n                  color='primaryGrad'\r\n                  onClick={logout}\r\n                >\r\n                  Logout\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className='p-3  mt-4' color='primary' onClick={updater}>\r\n                  Update Profile\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Container>\r\n      <Container fluid>\r\n        <Row className='shad radGrad mt-4 p-1 txt-cen rounded-pill stok'>\r\n          <Col>\r\n            <h1>Your Active Routes</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row md='1' xl='1'>\r\n          {routes.map((fl) => {\r\n            return (\r\n              <Col className='mt-3 txt-cen'>\r\n                <Card className=''>\r\n                  <CardBody>\r\n                    <CardHeader>\r\n                      <Row xs='1' xl='2'>\r\n                        <Col>\r\n                          <CardTitle>Hosted At:</CardTitle>\r\n                          <CardTitle tag='h3' className=''>\r\n                            <a\r\n                              href={`https://radroute.run/files/${fl.route_name}`}\r\n                            >\r\n                              RadRoute.run/files/\r\n                              {fl.route_name}\r\n                            </a>\r\n                          </CardTitle>\r\n                        </Col>\r\n                        <Col>{renderLang(fl.ext)}</Col>\r\n                      </Row>\r\n                    </CardHeader>\r\n                    <Col className='shad mt-3 p-3'>\r\n                      <CardTitle>Raw Code:</CardTitle>\r\n                      <CardText className='m-2'>\r\n                        {\" \"}\r\n                        <CodeBlock codeString={`${fl.pFile}`} />\r\n                      </CardText>\r\n                      <UpdateModal buttonLabel=\"Edit Code\" route={fl.route_name} funk={fl.pFile} rtid={fl.route_id} langy={fl.ext}/>\r\n                      Run with Rad Routes Runner :\r\n                      <CodeBlock codeString={`rr -r ${fl.route_name}`} />\r\n                    </Col>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, NavLink, Fade } from \"reactstrap\";\r\nimport logo from \"../../assets/images/radroutes.png\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Splash = (props) => {\r\n  const history = useHistory();\r\n\r\n  const checkAuth = () => {\r\n    let token = localStorage.getItem(\"enc\");\r\n    if (token) {\r\n      console.log(\"authed before\");\r\n      history.push(\"/Home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth()\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container id='logoCon' className='txt-cen' fluid>\r\n      <Container>\r\n        <Row className='mt-4'>\r\n          <Col id='logo'>\r\n          <img\r\n             className='img-fluid'\r\n             width='40%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Fade>\r\n              <NavLink href='/Login'>\r\n                <Button className='m-2 p-3' size='lg' color='primary' block>\r\n                  Login\r\n                </Button>\r\n              </NavLink>\r\n            </Fade>\r\n            <Fade>\r\n            <Fade>\r\n              <NavLink href='/Register'>\r\n                <Button className='m-2 p-3' size='lg' color='primaryGrad' block>\r\n                  Register\r\n                </Button>\r\n              </NavLink>\r\n            </Fade>\r\n              <NavLink href='https://docs.radroutes.com/'>\r\n                <Button\r\n                  className='m-2 p-3'\r\n                  size='lg'\r\n                  \r\n                  color='secondary'\r\n                  block\r\n                >\r\n                  Documentation\r\n                </Button>\r\n              </NavLink>\r\n            </Fade>\r\n            <Fade>\r\n            <NavLink href='/Downloads'>\r\n              <Button className='m-2 p-3' size='lg' color='secondaryGrad'  block>\r\n                Downloads\r\n              </Button>\r\n            </NavLink>\r\n            </Fade>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Row className='mr-5 ml-5  p-5 txt-cen'></Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Splash;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, NavLink,Button, Row, Col } from \"reactstrap\";\r\nimport CodeBlock from \"@tenon-io/tenon-codeblock\";\r\n\r\nimport logo from \"../../assets/images/radroutes.png\";\r\n\r\nconst Docs = (props) => {\r\n  return (\r\n    <Container className=\"txt-cen mt-4 p-4 shad\">\r\n      <Row className=\"txt-cen\">\r\n        <Col>\r\n          <NavLink href=\"/\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              width=\"30%\"\r\n              src={logo}\r\n              alt=\"rad routes logo\"\r\n            />\r\n          </NavLink>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className='shad radGrad p-1 mb-3 txt-cen rounded-pill stok'>\r\n          <h1>Downloads</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"txt-cen mt-3 p-4 shad\">\r\n        <Col>\r\n          <h3>Download Mac app installer</h3>\r\n          <a href=\"https://radroute.run/downloads/maczip\" download>\r\n              <Button color='primary'>\r\n\r\n          Click this button to download the mac .app Installer zip file\r\n              </Button>\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"txt-cen mt-4 p-4 shad\">\r\n        <Col>\r\n          <h1>Mac OS cURL installer</h1>\r\n          Simply enter the below command into your terminal;\r\n          <CodeBlock\r\n            codeString={`curl -s https://raw.githubusercontent.com/Rad-Routes/rad_routes_cli_installer/master/mac_installers/auto_mac_installer.sh | bash`}\r\n          />\r\n          The code above will download the R.A.D. Routes installer shell script, and then execute in bash.\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Docs;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport logo from \"../../assets/images/radroutes.png\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst RegiCheckEmail = (props) => {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\nconst sendVerification = ()=> {\r\n    alert('Verification email sent \\nPlease click the verification link in the email.')\r\n}\r\n\r\n\r\n  return (\r\n    <Container id=\"logoCon\" className=\"txt-cen\" fluid>\r\n      <Container>\r\n\r\n        <Row className=\"mt-4\">\r\n          <Col id=\"logo\">\r\n            <NavLink href='/'>\r\n            <img\r\n             className='img-fluid'\r\n             width='40%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Row className=\"p-3 txt-cen shad radGrad rounded-pill stok\">\r\n      <Col>\r\n          <strong>\r\n              <h1>\r\n                   Please check your email for verification link\r\n                  </h1>\r\n              </strong>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mr-5 ml-5 p-5 txt-cen\">\r\n      <Col>\r\n          <Button color='primaryGrad' onClick={sendVerification}>\r\n              Send Verification Email Again\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mr-5 ml-5  pt-5 pb-2 txt-cen\">\r\n      <Col>\r\n          <NavLink href=\"/Login\">\r\n              Login\r\n              </NavLink>\r\n        </Col>\r\n      </Row>\r\n      <Row className='pb-4 '>\r\n        <Col>\r\n          <NavLink href='/Register'>\r\n            Register\r\n        </NavLink>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default RegiCheckEmail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport logo from \"../../assets/images/radroutes.png\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst EmailVerified = (props) => {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\nconst sendVerification = ()=> {\r\n    alert('Verification email sent \\nPlease click the verification link in the email.')\r\n}\r\n\r\n\r\n  return (\r\n    <Container id=\"logoCon\" className=\"txt-cen\" fluid>\r\n      <Container>\r\n\r\n        <Row className=\"mt-4\">\r\n          <Col id=\"logo\">\r\n            <NavLink href='/'>\r\n            <img\r\n             className='img-fluid'\r\n             width='40%'\r\n               src={logo} alt=\"rad routes logo\"\r\n                />\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container  className=\"p-5 m-5 txt-cen\" fluid>\r\n      <Row className=\"p-3 m-5 txt-cen shad raddGrad rounded-pill stok\" >\r\n      <Col>\r\n      <NavLink href='https://radroutes.com/Login' >\r\n          <strong>\r\n              <h1>\r\n                   Your email has been verified!\r\n                  </h1>\r\n                  <h2>Click here to login</h2>\r\n              </strong>\r\n      </NavLink>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nexport default EmailVerified;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport FileUpload from \"./Pages/FileUpload/FileUpload\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport RunnerEditor from \"./Pages/Editors/RunnerEditor\";\r\nimport Peep from \"./Pages/Peep/Peep\";\r\nimport Register from \"./Pages/Register/Register.jsx\";\r\nimport Profile from \"./Pages/Profile/Profile.jsx\";\r\nimport Splash from \"./Pages/Splash/Splash.jsx\";\r\nimport Downloads from \"./Pages/Downloads/Downloads.jsx\";\r\nimport RegiCheckEmail from \"./Pages/RegiEmailCheck/RegiCheckEmail\";\r\nimport EmailVerified from \"./Pages/EmailVerified/EmailVerified\";\r\nimport \"./App.css\";\r\nimport {Container} from \"reactstrap\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Container fluid>\r\n        <Route path=\"/\" exact component={Splash} />\r\n\r\n      </Container>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/FileUpload\" exact component={FileUpload} />\r\n          <Route path=\"/Downloads\" exact component={Downloads} />\r\n          <Route path=\"/Login\" exact component={Login} />\r\n          <Route path=\"/Home\" exact component={Home} />\r\n          <Route path=\"/Profile\" exact component={Profile} />\r\n          <Route path=\"/Editor\" exact component={RunnerEditor} />\r\n          <Route path=\"/Peep\" exact component={Peep} />\r\n          <Route path=\"/Register\" exact component={Register} />\r\n          <Route path=\"/Register/EmailCheck\" exact component={RegiCheckEmail} />\r\n          <Route path=\"/Register/EmailVerified\" exact component={EmailVerified} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Styles/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorkerRegistration.register();\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}